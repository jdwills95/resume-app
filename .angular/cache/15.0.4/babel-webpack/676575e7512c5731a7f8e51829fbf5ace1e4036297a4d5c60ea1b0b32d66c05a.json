{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/current-screen-width/current-screen-width.service\";\nimport * as i2 from \"src/app/services/nav-bar/nav-bar.service\";\nimport * as i3 from \"src/app/services/scroll/scroll.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/components/footer/footer.component\";\nimport * as i7 from \"src/app/components/header/header.component\";\nimport * as i8 from \"src/app/components/nav-bar-desktop/nav-bar-desktop.component\";\nimport * as i9 from \"src/app/components/nav-bar-mobile/nav-bar-mobile.component\";\nfunction LayoutComponent_app_nav_bar_desktop_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-nav-bar-desktop\", 4);\n    i0.ɵɵlistener(\"navItemSendToApp\", function LayoutComponent_app_nav_bar_desktop_2_Template_app_nav_bar_desktop_navItemSendToApp_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.closeNavBar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LayoutComponent_app_nav_bar_mobile_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-nav-bar-mobile\", 4);\n    i0.ɵɵlistener(\"navItemSendToApp\", function LayoutComponent_app_nav_bar_mobile_3_Template_app_nav_bar_mobile_navItemSendToApp_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.closeNavBar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LayoutComponent {\n  constructor(currentScreenWidthService, navBarService, scrollService) {\n    this.currentScreenWidthService = currentScreenWidthService;\n    this.navBarService = navBarService;\n    this.scrollService = scrollService;\n    this.title = 'resume-app';\n    this.isDesktopOrBigger = true;\n    this.scrollServiceCheckAllowed = false;\n    this.isNavbarOpen = false;\n  }\n  ngAfterViewInit() {\n    this.scrollServiceCheckAllowed = true;\n  }\n  onResize() {\n    this.isDesktopOrBigger = this.currentScreenWidthService.isScreenWidthLargeDesktopOrBigger();\n  }\n  navBarButtonClickedRev() {\n    this.isNavbarOpen = !this.isNavbarOpen;\n    if (this.scrollServiceCheckAllowed) {\n      if (this.isNavbarOpen) {\n        this.scrollService.disable();\n      } else {\n        this.scrollService.enable();\n      }\n    }\n  }\n  closeNavBar() {\n    this.scrollService.enable();\n    this.navBarService.closeNavBar();\n    this.isNavbarOpen = false;\n  }\n  checkNavbarOpen() {\n    const isNavOpen = this.navBarService.getIsNavbarOpen();\n    if (this.scrollServiceCheckAllowed) {\n      if (isNavOpen) {\n        this.scrollService.disable();\n      } else {\n        this.scrollService.enable();\n      }\n    }\n    return isNavOpen;\n  }\n}\nLayoutComponent.ɵfac = function LayoutComponent_Factory(t) {\n  return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.CurrentScreenWidthService), i0.ɵɵdirectiveInject(i2.NavBarService), i0.ɵɵdirectiveInject(i3.ScrollService));\n};\nLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LayoutComponent,\n  selectors: [[\"app-layout\"]],\n  hostBindings: function LayoutComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function LayoutComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 7,\n  vars: 2,\n  consts: [[1, \"page-container\"], [3, \"navBarButtonClicked\"], [3, \"navItemSendToApp\", 4, \"ngIf\"], [1, \"main-content\"], [3, \"navItemSendToApp\"]],\n  template: function LayoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-header\", 1);\n      i0.ɵɵlistener(\"navBarButtonClicked\", function LayoutComponent_Template_app_header_navBarButtonClicked_1_listener() {\n        return ctx.navBarButtonClickedRev();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, LayoutComponent_app_nav_bar_desktop_2_Template, 1, 0, \"app-nav-bar-desktop\", 2);\n      i0.ɵɵtemplate(3, LayoutComponent_app_nav_bar_mobile_3_Template, 1, 0, \"app-nav-bar-mobile\", 2);\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"app-footer\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDesktopOrBigger && ctx.isNavbarOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isDesktopOrBigger && ctx.isNavbarOpen);\n    }\n  },\n  dependencies: [i4.NgIf, i5.RouterOutlet, i6.FooterComponent, i7.HeaderComponent, i8.NavBarDesktopComponent, i9.NavBarMobileComponent],\n  styles: [\".page-container[_ngcontent-%COMP%] {\\n  min-height: 100vh;\\n  overflow: hidden;\\n  display: block;\\n  position: relative;\\n  padding-bottom: 3.5em;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: #f3f3f3;\\n}\\n\\n.main-content[_ngcontent-%COMP%] {\\n  margin-top: 3.5em;\\n  padding-left: 0.5em;\\n  padding-right: 0.5em;\\n  max-width: 60em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBRUEsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtBQUFGOztBQUdBO0VBQ0UsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtBQUFGIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtY29udGFpbmVyIHtcclxuICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBwYWRkaW5nLWJvdHRvbTogMy41ZW07XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50IHtcclxuICBtYXJnaW4tdG9wOiAzLjVlbTtcclxuICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xyXG4gIG1heC13aWR0aDogNjBlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;IAGEA,8CAGC;IADCA;MAAAA;MAAA;MAAA,OAAoBA,mCAAa;IAAA,EAAC;IAEpCA,iBAAsB;;;;;;IACtBA,6CAGC;IADCA;MAAAA;MAAA;MAAA,OAAoBA,mCAAa;IAAA,EAAC;IAEpCA,iBAAqB;;;ACDvB,OAAM,MAAOC,eAAe;EAM1BC,YACUC,yBAAoD,EACpDC,aAA4B,EAC5BC,aAA4B;IAF5B,8BAAyB,GAAzBF,yBAAyB;IACzB,kBAAa,GAAbC,aAAa;IACb,kBAAa,GAAbC,aAAa;IARvB,UAAK,GAAG,YAAY;IACpB,sBAAiB,GAAG,IAAI;IACxB,8BAAyB,GAAG,KAAK;IACjC,iBAAY,GAAG,KAAK;EAMjB;EAEHC,eAAe;IACb,IAAI,CAACC,yBAAyB,GAAG,IAAI;EACvC;EAGAC,QAAQ;IACN,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACN,yBAAyB,CAACO,iCAAiC,EAAE;EAC7F;EAEAC,sBAAsB;IACpB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,IAAI,CAACL,yBAAyB,EAAE;MAClC,IAAI,IAAI,CAACK,YAAY,EAAE;QACrB,IAAI,CAACP,aAAa,CAACQ,OAAO,EAAE;OAC7B,MAAM;QACL,IAAI,CAACR,aAAa,CAACS,MAAM,EAAE;;;EAGjC;EAEAC,WAAW;IACT,IAAI,CAACV,aAAa,CAACS,MAAM,EAAE;IAC3B,IAAI,CAACV,aAAa,CAACW,WAAW,EAAE;IAChC,IAAI,CAACH,YAAY,GAAG,KAAK;EAC3B;EAEAI,eAAe;IACb,MAAMC,SAAS,GAAG,IAAI,CAACb,aAAa,CAACc,eAAe,EAAE;IACtD,IAAI,IAAI,CAACX,yBAAyB,EAAE;MAClC,IAAIU,SAAS,EAAE;QACb,IAAI,CAACZ,aAAa,CAACQ,OAAO,EAAE;OAC7B,MAAM;QACL,IAAI,CAACR,aAAa,CAACS,MAAM,EAAE;;;IAG/B,OAAOG,SAAS;EAClB;;;mBAhDWhB,eAAe;AAAA;;QAAfA,eAAe;EAAAkB;EAAAC;IAAA;;eAAfC,oBAAgB;MAAA;;;;;;;;MDX7BrB,8BAA4B;MAEdA;QAAA,OAAuBqB,4BAAwB;MAAA,EAAC;MAACrB,iBAAa;MAC1EA,gGAIsB;MACtBA,8FAIqB;MACrBA,8BAA0B;MACxBA,gCAA+B;MACjCA,iBAAM;MAENA,6BAAyB;MAC3BA,iBAAM;;;MAdDA,eAAuC;MAAvCA,gEAAuC;MAKvCA,eAAwC;MAAxCA,iEAAwC","names":["i0","LayoutComponent","constructor","currentScreenWidthService","navBarService","scrollService","ngAfterViewInit","scrollServiceCheckAllowed","onResize","isDesktopOrBigger","isScreenWidthLargeDesktopOrBigger","navBarButtonClickedRev","isNavbarOpen","disable","enable","closeNavBar","checkNavbarOpen","isNavOpen","getIsNavbarOpen","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\jdwil\\Projects\\resume-app\\src\\app\\layouts\\layout\\layout.component.html","C:\\Users\\jdwil\\Projects\\resume-app\\src\\app\\layouts\\layout\\layout.component.ts"],"sourcesContent":["<div class=\"page-container\">\r\n  <!-- header -->\r\n  <app-header (navBarButtonClicked)=\"navBarButtonClickedRev()\"></app-header>\r\n  <app-nav-bar-desktop\r\n    *ngIf=\"isDesktopOrBigger && isNavbarOpen\"\r\n    (navItemSendToApp)=\"closeNavBar()\"\r\n  >\r\n  </app-nav-bar-desktop>\r\n  <app-nav-bar-mobile\r\n    *ngIf=\"!isDesktopOrBigger && isNavbarOpen\"\r\n    (navItemSendToApp)=\"closeNavBar()\"\r\n  >\r\n  </app-nav-bar-mobile>\r\n  <div class=\"main-content\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <!-- footer -->\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component, HostListener, AfterViewInit } from '@angular/core';\r\n\r\nimport { CurrentScreenWidthService } from 'src/app/services/current-screen-width/current-screen-width.service';\r\nimport { NavBarService } from 'src/app/services/nav-bar/nav-bar.service';\r\nimport { ScrollService } from 'src/app/services/scroll/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutComponent implements AfterViewInit {\r\n  title = 'resume-app';\r\n  isDesktopOrBigger = true;\r\n  scrollServiceCheckAllowed = false;\r\n  isNavbarOpen = false;\r\n\r\n  constructor(\r\n    private currentScreenWidthService: CurrentScreenWidthService,\r\n    private navBarService: NavBarService,\r\n    private scrollService: ScrollService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.scrollServiceCheckAllowed = true;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(): void {\r\n    this.isDesktopOrBigger = this.currentScreenWidthService.isScreenWidthLargeDesktopOrBigger();\r\n  }\r\n\r\n  navBarButtonClickedRev(): void {\r\n    this.isNavbarOpen = !this.isNavbarOpen;\r\n    if (this.scrollServiceCheckAllowed) {\r\n      if (this.isNavbarOpen) {\r\n        this.scrollService.disable();\r\n      } else {\r\n        this.scrollService.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeNavBar(): void {\r\n    this.scrollService.enable();\r\n    this.navBarService.closeNavBar();\r\n    this.isNavbarOpen = false;\r\n  }\r\n\r\n  checkNavbarOpen(): boolean {\r\n    const isNavOpen = this.navBarService.getIsNavbarOpen();\r\n    if (this.scrollServiceCheckAllowed) {\r\n      if (isNavOpen) {\r\n        this.scrollService.disable();\r\n      } else {\r\n        this.scrollService.enable();\r\n      }\r\n    }\r\n    return isNavOpen;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}